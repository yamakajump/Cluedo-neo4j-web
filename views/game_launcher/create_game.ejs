<!DOCTYPE html>
<html lang="fr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Partie Créée</title>
    <link rel="stylesheet" href="/css/game-menu.css">
</head>
<body>
    <div class="menu-container">
        <div class="frame">
            <h2>Partie Créée</h2>
            <p>Votre code de partie : <strong id="gameCode"><%= gameCode %></strong></p>
            <p>Créateur : <strong id="playerName"><%= playerName %></strong></p>
            <button class="button" onclick="copyCode()">Copier le code</button>
            <button class="button" onclick="window.location.href = '/start_game/<%= gameCode %>'">Démarrer la partie</button>
            <button class="button" onclick="deleteGame()">Supprimer la partie</button>

            <h3>Joueurs dans la partie :</h3>
            <ul id="playersList">
                <% players.forEach(function(player) { %>
                    <li><%= player %></li>
                <% }); %>
            </ul>
        </div>
    </div>

    <script>
        const gameCode = '<%= gameCode %>';
        const playerName = '<%= playerName %>';

        // Fonction pour copier le code
        function copyCode() {
            navigator.clipboard.writeText(gameCode).then(() => {
                console.log('Code copié : ' + gameCode);
            }).catch(err => {
                console.error('Erreur lors de la copie du code :', err);
            });
        }

        // Fonction pour supprimer la partie (seulement par le propriétaire)
        async function deleteGame() {
            const confirmed = confirm('Voulez-vous vraiment supprimer la partie ?');
            if (confirmed) {
                try {
                    const response = await fetch(`/exit_game/delete/${gameCode}`, { method: 'DELETE' });
                    if (response.ok) {
                        alert('Partie supprimée avec succès.');
                        window.location.href = '/'; // Rediriger vers la page principale
                    } else {
                        alert('Erreur lors de la suppression de la partie.');
                    }
                } catch (error) {
                    console.error('Erreur lors de la suppression de la partie :', error);
                }
            }
        }

        // WebSocket pour suivre les mises à jour des joueurs
        const ws = new WebSocket('ws://localhost:3001');

        ws.onopen = () => {
            console.log('Connecté au serveur WebSocket');
        };

        ws.onmessage = (event) => {
            const data = JSON.parse(event.data);
            if (data.gameCode === gameCode) {
                if (data.type === 'playerJoined' || data.type === 'playerLeft') {
                    fetchPlayers();
                }

                if (data.type === 'deleteGame') {
                    window.location.href = `/`;
                }
            }
        };

        ws.onerror = (error) => {
            console.error('Erreur WebSocket :', error);
        };

        ws.onclose = () => {
            console.log('Déconnecté du serveur WebSocket');
        };

        // Rafraîchir la liste des joueurs
        async function fetchPlayers() {
            try {
                const response = await fetch(`/api/game/getPlayers/${gameCode}`);
                const data = await response.json();
                const playersList = document.getElementById('playersList');
                playersList.innerHTML = '';
                data.players.forEach(player => {
                    const li = document.createElement('li');
                    li.textContent = player;
                    playersList.appendChild(li);
                });
            } catch (error) {
                console.error('Erreur lors de la récupération des joueurs :', error);
            }
        }

        fetchPlayers();  // Charger la liste des joueurs immédiatement
    </script>
</body>
</html>
