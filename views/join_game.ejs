<!DOCTYPE html>
<html lang="fr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Rejoindre une Partie</title>
    <link rel="stylesheet" href="/css/game-menu.css">
</head>
<body>
    <div class="menu-container">
        <div class="frame">
            <h2>Rejoindre la Partie</h2>
            <p>Code de la partie : <strong id="gameCode"><%= gameCode %></strong></p>
            <p>Joueur : <strong id="playerName"><%= playerName %></strong></p>
            <button class="button" onclick="copyCode()">Copier le code</button>
            <button class="button" onclick="leaveGame()">Quitter la partie</button>

            <h3>Joueurs dans la partie :</h3>
            <ul id="playersList">
                <!-- Liste des joueurs sera injectée ici par JavaScript -->
            </ul>
        </div>
    </div>

    <script>
        const gameCode = document.getElementById('gameCode').textContent;

        function copyCode() {
            navigator.clipboard.writeText(gameCode).then(() => {
                console.log('Code copié : ' + gameCode);
            }).catch(err => {
                console.error('Erreur lors de la copie du code :', err);
            });
        }

        // Fonction pour quitter la partie
        async function leaveGame() {
            const confirmed = confirm('Voulez-vous vraiment quitter la partie ?');
            if (confirmed) {
                try {
                    const response = await fetch(`/exit_game/leave/${gameCode}`, { method: 'POST' });
                    if (response.ok) {
                        alert('Vous avez quitté la partie.');
                        window.location.href = '/';
                    } else {
                        alert('Erreur lors de la sortie de la partie.');
                    }
                } catch (error) {
                    console.error('Erreur lors de la sortie de la partie :', error);
                }
            }
        }

        // Utiliser WebSocket pour obtenir les mises à jour en temps réel
        const ws = new WebSocket('ws://localhost:3001');

        ws.onopen = () => {
            console.log('Connecté au serveur WebSocket');
        };

        ws.onmessage = (event) => {
            const data = JSON.parse(event.data);
            if (data.gameCode === gameCode) {
                console.log(data.message);  // Afficher un message lorsqu'un joueur rejoint

                // Mettre à jour la liste des joueurs
                fetchPlayers();
            }
        };

        ws.onerror = (error) => {
            console.error('Erreur WebSocket :', error);
        };

        ws.onclose = () => {
            console.log('Déconnecté du serveur WebSocket');
        };

        // Fonction pour récupérer la liste des joueurs à la demande
        async function fetchPlayers() {
            try {
                const response = await fetch(`/api/game/getPlayers/${gameCode}`);
                const data = await response.json();
                const playersList = document.getElementById('playersList');
                
                // Si aucun joueur n'est présent, rediriger vers la page d'accueil
                if (data.players.length === 0) {
                    window.location.href = '/';
                    return;
                }

                playersList.innerHTML = '';
                data.players.forEach(player => {
                    const li = document.createElement('li');
                    li.textContent = player;
                    playersList.appendChild(li);
                });
            } catch (error) {
                console.error('Erreur lors de la récupération des joueurs :', error);
                window.location.href = '/'; // En cas d'erreur, rediriger vers la page principale
            }
        }

        // Charger la liste des joueurs immédiatement
        fetchPlayers();
    </script>
</body>
</html>
